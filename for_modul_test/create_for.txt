[TestMethod]
	void TestMethod_error_clear() {//функциясбросаотказныхситуаций(исп.однократноприсменережимов)Error_s.big_absP=0;Error_s.no_germetic=0;Error_s.Perenadduv=0;Error_s.Vakuum=0;Error_s.Perepad=0;Error_s.smallV=0;Error_s.small_absP=0;SARD_Set.ERROR_SARD=0;UART1Error=0;SARD_Set.csKZ1M1=0;SARD_Set.csKZ1M2=0;UART2Error=0;SARD_Set.BDD4_gl_ERROR=0;SARD_Set.BDD4_an_error=0;SARD_Set.BDD4_rez_error=0;SARD_Set.BDD4_an_rez_error=0;SARD_Set.ERROR_CHNL_STAT=0;//GroundChechON=0;//GroundCheckImpossible=0;prev_fly_control=0;allground_control=0;//AllGroundChechON=0;//AllGroundCheckImpossible=0;SARD_Set.ERROR_pos1=0;SARD_Set.ERROR_pos2=0;Ext_SARD_Set.READ_MEMORY_BDD1_error=0;Ext_SARD_Set.READ_MEMORY_BDD2_error=0;SARD_Set.read_mem_error1=0;SARD_Set.read_mem_error2=0;SARD_Set.SPEED_PRESS_ERROR=0;SARD_Set.ERROR_BUK1=0;SARD_Set.ERROR_CH1BUK1=0;SARD_Set.ERROR_VK1=0;SARD_Set.ERROR_VK2=0;SARD_Set.ERROR_CH2BUK1=0;SARD_Set.ERROR_BUK2=0;SARD_Set.ERROR_CH1BUK2=0;SARD_Set.ERROR_CH2BUK2=0;Ext_SARD_Set.type_used_barcorr_mvv1=1;Ext_SARD_Set.type_used_barcorr_mvv2=1;SARD_Set.ruch_height_aerodrom=0;Ext_SARD_Set.RUCH_PULT_height_aerodrom=6600;switch_counter=0;}voidGetExtInfo(){//подхватываемТОЛЬКОдискретнуюинформациюif((UART1Error==1)&&(UART2Error==1)){//uart'sdeadif(!((SARD_Set.error_CAN1)&&(SARD_Set.error_CAN2))){//хотьоднамежканальнаялиниядолжнабытьжива!SARD_Set.read_mem_error2=!CanIn_Another_CHNL->frame3_2_AK_all.bitset.memory_test_succesfull;if(((SARD_Set.ErrorDiscreteA429)&&(SARD_Set.ErrorDiscreteA429_2))||((SARD_Set.ErrorCPIOM_A)&&(SARD_Set.ErrorCPIOM_C)))
{
ofstream out;
int TestTask = 0;
out.open("TestMethod_ACS_error_clear().txt");
out.close(); 
}

[TestMethod]
	void TestMethod_test ()
{
ofstream out;
int TestTask = 0;
out.open("TestMethod_ACS_test.txt");
out.close(); 
}

